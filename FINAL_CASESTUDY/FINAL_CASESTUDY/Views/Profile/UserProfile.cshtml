@model PasteBookEntity.USER

@{
    var profileOwnerID = Model.ID;
    var user = Model.USER_NAME;

    string status = ViewData["status"].ToString();
}
@Html.Hidden("currentProfile", Model.ID, new { id = "currentProfile" })
@Html.Hidden("user", (int)Session["currentUser"], new { id="userID" })

<div class="col-sm-4">
    <div class="container-fluid"></div>
        @*<div id="imageProfileContainer">*@
            @{if (Model.PROFILE_PIC == null)
                {
                    <div id="imageProfileContainer">
                        <img src="~/Content/samplePicture/pastebook-avatar.jpg" class="img-responsive" id="profilePic" />
                    </div>
                }
                else
                {
                    //source: http://stackoverflow.com/questions/17952514/mvc-how-to-display-a-byte-array-image-from-model
                    var base64 = Convert.ToBase64String(Model.PROFILE_PIC);
                    var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                    <div id="imageProfileContainer">
                        <img src="@imgSrc" class="img-responsive" id="profilePic" />
                    </div>
                }
            }
        @*</div>*@
        @if (Model.ID == (int)Session["currentUser"])
        {
            <div>
                <button class="btn btn-primary" data-toggle="modal" data-target="#addProfilepic">Edit profile pic<span class="glyphicon glyphicon-pencil"></span></button>
                <button class="btn btn-primary" data-toggle="modal" data-target="#addAboutMe">Update about me<span class="glyphicon glyphicon-pencil"></span></button>
            </div><br />
        }        
    
    @if (Model.ABOUT_ME != null && Model.ABOUT_ME != "")
    {
        <div class="well">
            <div class="container-fluid">
                <p>About me</p>
                <p id="aboutMeContainer">@Model.ABOUT_ME</p>
            </div>
        </div>        
    }

    

    <div id="infoContainer">
        <div class="well">
            <div class="container-fluid">
                <p>Profile Information</p>
                <input type="hidden" name="username" id="userName" value="@Model.ID" />
                <p class="about-me-container">Email: @Model.EMAIL_ADDRESS</p>
                <p class="about-me-container">Birthday: @Html.DisplayFor(x => x.BIRTHDAY)</p>
                @if (Model.COUNTRY_ID != null)
                {
                    <p class="about-me-container">Country: @Model.REF_COUNTRY.COUNTRY</p>
                } 
                @if (Model.MOBILE_NO != null)
                {
                    <p class="about-me-container">Mobile: @Model.MOBILE_NO</p>
                }                        
            </div>
        </div>
    </div>

    @*modal for profile pic*@
    <div class="modal fade" id="addProfilepic" role="dialog">
        <div class="modal-dialog">

            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <p class="modal-title">Upload your profile picture.</p>
                </div>
                <div class="modal-body">
                    <div class="container-fluid">
                        @*source http://stackoverflow.com/questions/16255882/uploading-displaying-images-in-mvc-4*@
                        @using (Html.BeginForm("UploadProfilePic", "Account", FormMethod.Post, new { enctype = "multipart/form-data", id="uploadImageForm" }))
                        {
                            <p id="errorPic" class="text-danger"></p>

                            <label>Upload Image:</label>
                            <input type="file" name="file" id="imageFile" accept="image/*" /><br />
                            <input type="button" class="btn btn-primary pull-right" id="uploadImage" value="Upload" />
                        }
                    </div>
                    

                </div>
            </div>
        </div>
    </div>
    @*modal for about me*@
    <div class="modal fade" id="addAboutMe" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <p class="modal-title">About me <span class="glyphicon glyphicon-pencil"></span></p>
                </div>
                <div class="modal-body">
                    <div class="container-fluid">
                        @if (Model.ABOUT_ME == null)
                        {
                            <textarea class="form-control about-me" rows="5" id="txtAboutMe" name="aboutMe" placeholder="Something about me..."></textarea><br />
                        }
                        else
                        {
                            @Html.TextAreaFor(model => model.ABOUT_ME, new { rows = "5", id = "txtAboutMe", name = "aboutMe", @class = "form-control about-me" })<br />                                    
                        }
                        <span class="text-danger" id="errorAboutMe"></span>
                        <input type="button" value="Update" class="btn btn-primary pull-right" id="submitAboutMe" />
                    </div>
                    
                    
                </div>
            </div>
        </div>
    </div>



</div>
<div class="col-sm-8">
    <div class="container-fluid">
        <div class="row">
            <div id="headerContainer">
                <div class="well">

                    <div class="container-fluid">
                        
                            @if (Model.FIRST_NAME.Length > 30 || Model.LAST_NAME.Length > 30)
                            {
                                <div id="profileLongNameContainer">
                                    <p id="profileLongName">@Model.FIRST_NAME @Model.LAST_NAME</p>
                                </div>
                            }
                            else
                            {
                                <div id="profileNameContainer">
                                    <p id="profileName">@Model.FIRST_NAME @Model.LAST_NAME</p>
                                </div>
                            }

                        @{
                            switch (status)
                            {
                                case "profile owner":
                                    break;
                                case "friends":
                                    <span class="btn pull-right" id="friendsTrue">Friends <span class="glyphicon glyphicon-ok"></span></span>
                                    break;
                                case "no request":
                                    <button type="button" id="addAsFriend" class="btn btn-primary pull-right friendbutton">Add as friend</button>
                                    break;
                                case "user request":
                                    <button type="button" id="requestAdd" class="btn btn-default pull-right friendbutton" disabled>Friend request sent</button>
                                    break;
                                case "friend confirm":
                                    <div class="dropdown pull-right">
                                        <button class="btn dropdown-toggle" type="button" id="dropdownRequest" data-toggle="dropdown">Confirm friend request</button>
                                        <ul class="dropdown-menu" role="menu" aria-labelledby="confirmRequest">
                                            <li role="presentation"><a id="confirmRequest">Confirm</a></li>
                                            <li role="presentation"><a id="deleteRequest">Reject Request</a></li>
                                        </ul>
                                    </div>
                                    break;
                                default:
                                    break;
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="row"> 
            @{  
                if (status == "friends" || status == "profile owner")
                {
                <div class="well">
                    <div class="container-fluid">
                        
                        <textarea class="form-control" id="postContent" rows="3" placeholder="What's on your mind?"></textarea>
                        <span class="text-danger" id="errorPost"></span>
                        <input type="button" id="postBtnProfile" value="Post" class="btn btn-primary pull-right" />                                
                    </div>
                </div>
                <div id="postContainer">
                    @{Html.RenderAction("GetPostOnProfile", "Profile", new { username = user });}
                </div>
                }
                else
                {
                    <p>You and @Model.FIRST_NAME @Model.LAST_NAME are not friends yet.</p>
                }
            }  
            
        </div>
    </div>
</div>


@section scripts{
    <script>
        var addPostUrl = '@Url.Action("AddPost", "Post")';
        var getPostUrl = '@Url.Action("GetPostOnProfile", "Profile", new { username = user })';
        var addCommentUrl = '@Url.Action("CommentPost", "Post")';
        var likePostUrl = '@Url.Action("LikePost", "Post")';
        var unlikePostUrl = '@Url.Action("UnlikePost", "Post")';

        var addAboutMeUrl = '@Url.Action("UpdateAboutMe", "Account")';
        var checkFriendRequestUrl = '@Url.Action("CheckFriendRequest", "Friend", new { currentProfileID = Model.ID })';
        var addAsFriendUrl = '@Url.Action("AddAsFriend", "Friend", new { currentProfileID = Model.ID })';
        var confirmRequestUrl = '@Url.Action("ConfirmRequest", "Friend")';
        var deleteRequestUrl = '@Url.Action("DeleteRequest", "Friend")';
        var profileHeaderContainerUrl = '@Url.Action("ReloadProfileHeader", "Profile", new { username = user })'
        var errorPageUrl = '@Url.Action("GlobalError", "Error")';
    </script>
    <script src="~/Scripts/PasteBookJS/Profile.js"></script>
}
