@model PasteBookEntity.USER

<div class="col-sm-3"></div>
<div class="col-sm-6">
    <div class="form-horizontal">
        <div class="title-container">
            <p class="form-title">Sign-up</p>
            <p>Already have an account? @Html.ActionLink("Login", "Login", "Account") now!</p>
        </div>        
        @using (Html.BeginForm("ValidateRegister", "Account", FormMethod.Post, new { id = "registrationForm" }))
        {            
            <p>Required fields *</p>
            <div class="form-group">
                @Html.Label("Username *", htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-8">
                    @Html.EditorFor(model => model.USER_NAME, new { htmlAttributes = new { @class = "form-control", id = "registerUsername" } })
                    @Html.ValidationMessageFor(model => model.USER_NAME,"", new { @class = "text-danger", id = "errorUsername" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Email address *", htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-8">
                    @Html.EditorFor(model => model.EMAIL_ADDRESS, new { htmlAttributes = new { @class = "form-control", id = "registerEmail" } })
                    @Html.ValidationMessageFor(model => model.EMAIL_ADDRESS, "", new { @class = "text-danger", id = "errorEmail" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("First name *", htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-8">
                    @Html.EditorFor(model => model.FIRST_NAME, new { htmlAttributes = new { @class = "form-control", id="registerFirstName"} })
                    @Html.ValidationMessageFor(model => model.FIRST_NAME, "", new { @class = "text-danger", id="errorFirstName" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Last name *", htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-8">
                    @Html.EditorFor(model => model.LAST_NAME, new { htmlAttributes = new { @class = "form-control", id="registerLastName" } })
                    @Html.ValidationMessageFor(model => model.LAST_NAME, "", new { @class = "text-danger", id="errorLastName" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Password *", htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-8">
                    @Html.EditorFor(model => model.PASSWORD, new { htmlAttributes = new { type = "password", @class = "form-control", id= "userPassword" } })
                    @Html.ValidationMessageFor(model => model.PASSWORD, "", new { @class = "text-danger", id="errorPassword" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Confirm password *", htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-8">
                    @Html.TextBox("confirmPassword","",new { type = "password", @class = "form-control", id = "confirmPassword" })
                    @Html.ValidationMessage("errorConfirm", "", new { @class = "text-danger", id = "errorConfirm" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Birthday *", htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-8">
                    @Html.EditorFor(model => model.BIRTHDAY, "{0:yyyy-MM-dd}", new { htmlAttributes = new { id="registerBday", type = "date", @class = "form-control", max = DateTime.Now.ToString("yyyy-MM-dd") } })
                    @Html.ValidationMessageFor(model => model.BIRTHDAY, "", new { @class = "text-danger", id="errorBday" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Country", htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-8">
                    @Html.DropDownListFor(x => x.COUNTRY_ID, (SelectList)@ViewData["countryList"] as SelectList, "Select Country", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Mobile number", htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-8">
                   @Html.EditorFor(model => model.MOBILE_NO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MOBILE_NO, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Gender", htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-8">
                    <label class="radio-inline">@Html.RadioButton("Gender", "F") Female </label>
                    <label class="radio-inline">@Html.RadioButton("Gender", "M") Male</label>
                </div>
            </div><br />

            <div class="form-group">
                <div class="col-sm-offset-4 col-sm-8">
                    <input type="submit" id="registerUser" value="Create Account" class="btn btn-primary" onclick="ChangePasswordScript()" />
                </div>
            </div>
            
        }
    </div>     
    
</div>
<div class="col-sm-3"></div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var checkUsernameUrl = '@Url.Action("CheckUsername","Account")';
        var checkEmailUrl = '@Url.Action("CheckEmail", "Account")';
        var errorPageUrl = '@Url.Action("GlobalError", "Error")';
    </script>
    <script src="~/Scripts/PasteBookJS/Register.js"></script>
}
